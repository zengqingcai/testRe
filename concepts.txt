对称加密（非对称加密） 数字签名
加密的好处与坏处（速度会慢 需要大量运算）
高等级的数据（又签名 又要加密）
甲方（a私钥 b公钥）  乙方（b私钥 a公钥）
甲方把公钥给乙方 乙方把公钥给甲方
甲方拿a私钥加签 b公钥加密 发给乙方
乙方拿a公钥验签 b私钥解密 获取数据

数据的通信安全：
加密方式：
MD5
HMACSHA256
BASE64编码
MD5
SHA
HMAC
加盐（salt）
3DE
AES
签名与加密的区别：
就拿A给B发送经过签名加密信息来说：
1、A对信息签名的作用是确认这个信息是A发出的，不是别人发出的；（保证数据不被篡改）
2、加密是对内容进行机密性保护，主要是保证信息内容不会被其他人获取，只有B可以获取。（保证数据安全）

理解JWT
JWT通讯令牌
请求头添加token


我的公钥 私钥
网关的公钥 私钥

这时A向B发送信息的整个签名和加密的过程如下：
1、A先用自己的私钥（PRI_A）对信息（一般是信息的摘要）进行签名。
2、A接着使用B的公钥（PUB_B）对信息内容和签名信息进行加密。

这样当B接收到A的信息后，获取信息内容的步骤如下：
1、用自己的私钥（PRI_B）解密A用B的公钥（PUB_B）加密的内容；
2、得到解密后的明文后用A的公钥（PUB_A）解签A用A自己的私钥（PRI_A）的签名。

从而整个过程就保证了开始说的端到端的唯一确认。
1、A的签名只有A的公钥才能解签，这样B就能确认这个信息是A发来的；
2、A的加密只有B的私钥才能解密，这样A就能确认这份信息只能被B读取。


1、数字签名和验证：

发送报文时，发送方用一个hash算法从报文中产生固定长度的报文摘要，然后利用自己的私钥对这个摘要进行加密，这个过程就叫签名。这个加密后的摘要作为报文的数字签名和报文一起发送给接收方，接收方用发送方的公钥解密被加密的摘要（报文附加的数字签名）得到结果A，然后用于发送方一样的hash算法从接收到的原始报文中算出报文摘要B。最后,把A和B作比较。如果相同，那么接收方就能确认该数字签名是发送方的。

 

加密和解密：
发送方利用接收方的公钥对要发送的明文进行加密,接受方利用自己的私钥进行解密,其中公钥和私钥匙相对的,任何一个作为公钥,则另一个就为私钥。

 

2、数字签名的功能:

a) 对签名者进行身份认证；

b) 保证信息的完整性（在交易过程中，没有被篡改）

c) 防止交易中的抵赖发生（签名者无法否认信息是由自己发出的）

   加密的功能：

a) 重点在于“数据的安全性”，可以防止数据被监听攻击。

非对称签名
证书生成工具 keytool 
证书加密
生成待签名的字符串
RSA AES加密

通信数据安全的一个项目
非对称加密算法使用公钥加密，私钥解密，私钥签名，公钥验签。

Saas模式
23种模式：代理模式 适配器模式


定义了一个list，该list的数据类型是NameValuePair（简单名称值对节点类型），这个代码多处用于Java像url发送Post请求。在发送post请求时用该list来存放参数。
发送请求的大致过程如下：

String url="http://www.baidu.com";
HttpPost httppost=new HttpPost(url); //建立HttpPost对象
List<NameValuePair> params=new ArrayList<NameValuePair>();
//建立一个NameValuePair数组，用于存储欲传送的参数
params.add(new BasicNameValuePair("pwd","2544"));
//添加参数
httppost.setEntity(new UrlEncodedFormEntity(params,HTTP.UTF_8));
//设置编码
HttpResponse response=new DefaultHttpClient().execute(httppost);
//发送Post,并返回一个HttpResponse对象


四种方式：Rest rpc http https的区别
不同数据类型的转换


PoolingHttpClientConnectionManager 连接池


url常量；
config
加url

业务需求：
用户角色权限模块
省市区
app


医疗+互联网模式
共享医生
共享医药良方
共享秘方
养生你我他
医药问答
抗癌药物
药物的存储

CDN缓存机制

springcloud和springboot版本配套
spring cloud 实例的创建
https://blog.csdn.net/qq_44575680/article/details/90290092
spring-security的permitAll()和anonymous()是什么区别

代码合法性判断（请求地址啊 请求参数 过滤ip 过滤接口访问频次）
jvm内存标记
redis访问
mq中间件（削峰填谷）
db访问
代码的重复使用（复用）reuse

spring cloud Alibaba 中国版微服务框架
形参可以尽量用接口 抽象类 父级（泛型模型）
并发 concurrent 

难度：锁机制 map hashmap concurrenthashmap 悲观锁 乐观锁 事务 高并发 
借力打力（整理资源）
整理资料

zeng-common 
springcontext
HttpServletRequestWrapper


第三方权威平台实现身份认证

我  微信（权威平台） 爱京东（某平台）
不可逆的加密
OAuth 2.0
config
gateway 熔断、降级、限流


		认证中心（第三方权威服务中心）

客户端（client） =========》  订单服务（资源方）-----》 redis缓存







select a.*,b.ticketNum from(
SELECT SUBSTR(T.DTMAKEDATE,1,10) AS dateStr,R.PROVIDERNAME AS scenic,R.REGION AS region,sum(T.INT1) AS checkinNum
        FROM
	    HISTICKETCHECKLIST T,
	    ESBSCENICAREATAB S LEFT JOIN PROVIDEREGION R on S.ISCENICID=R.ISCENICID
	    WHERE 
SUBSTR(T.DTMAKEDATE,1,17) >= '2020-05-26 00:00'
and SUBSTR(T.DTMAKEDATE,1,17) <= '2020-05-26 23:59'
	    AND T.ISALESVOUCHERID > 0
	    AND S.ISCENICID = T.ISCENICID
		GROUP BY SUBSTR(T.DTMAKEDATE,1,10) ,R.PROVIDERNAME ,R.REGION) a,
(select 
SUBSTR(SALE.DTMAKEDATE,1,10) AS sellTime,
R.REGION AS region,
R.PROVIDERNAME AS scenic,
R.SCENECODE AS sceneCode,
sum(SOLD.ITICKETNUM) as ticketNum
        FROM
	    STSSALESVOUCHERDETAILSTAB SOLD,
	    STSSALESVOUCHERTAB SALE,
	    EDMTICKETTYPETAB E,
	    ESBSCENICAREATAB S LEFT JOIN PROVIDEREGION R on S.ISCENICID=R.ISCENICID
	    WHERE 
SUBSTR(SALE.DTMAKEDATE,1,17) >= '2020-05-26 00:00'
and SUBSTR(SALE.DTMAKEDATE,1,17) <='2020-05-26 23:59'
	    AND SALE.ISALESVOUCHERID=SOLD.ISALESVOUCHERID
        AND SALE.ITICKETSTATIONID=SOLD.ITICKETSTATIONID
	    AND SOLD.ITICKETTYPEID = E.ITICKETTYPEID
	    AND E.ISCENICID = S.ISCENICID
GROUP BY 
SUBSTR(SALE.DTMAKEDATE,1,10),
R.REGION,
R.PROVIDERNAME,
R.SCENECODE )b








select a.*,b.ticketNum from(
SELECT SUBSTR(T.DTMAKEDATE,1,10) AS dateStr,R.PROVIDERNAME AS scenic,R.REGION AS region,sum(T.INT1) AS checkinNum
        FROM
	    HISTICKETCHECKLIST T,
	    ESBSCENICAREATAB S LEFT JOIN PROVIDEREGION R on S.ISCENICID=R.ISCENICID
	    WHERE 
SUBSTR(T.DTMAKEDATE,1,17) >= '2020-05-26 00:00'
and SUBSTR(T.DTMAKEDATE,1,17) <= '2020-05-26 23:59'
	    AND T.ISALESVOUCHERID > 0
	    AND S.ISCENICID = T.ISCENICID
		GROUP BY SUBSTR(T.DTMAKEDATE,1,10) ,R.PROVIDERNAME ,R.REGION) a,
(select 
SUBSTR(SALE.DTMAKEDATE,1,10) AS sellTime,
R.REGION AS region,
R.PROVIDERNAME AS scenic,
R.SCENECODE AS sceneCode,
sum(SOLD.ITICKETNUM) as ticketNum
        FROM
	    STSSALESVOUCHERDETAILSTAB SOLD,
	    STSSALESVOUCHERTAB SALE,
	    EDMTICKETTYPETAB E,
	    ESBSCENICAREATAB S LEFT JOIN PROVIDEREGION R on S.ISCENICID=R.ISCENICID
	    WHERE 
SUBSTR(SALE.DTMAKEDATE,1,17) >= '2020-05-26 00:00'
and SUBSTR(SALE.DTMAKEDATE,1,17) <='2020-05-26 23:59'
	    AND SALE.ISALESVOUCHERID=SOLD.ISALESVOUCHERID
        AND SALE.ITICKETSTATIONID=SOLD.ITICKETSTATIONID
	    AND SOLD.ITICKETTYPEID = E.ITICKETTYPEID
	    AND E.ISCENICID = S.ISCENICID
 and R.REGION='西湖'
 and R.PROVIDERNAME='灵山风景区'
GROUP BY 
SUBSTR(SALE.DTMAKEDATE,1,10),
R.REGION,
R.PROVIDERNAME,
R.SCENECODE )b
where a.region = b.region

			
			












