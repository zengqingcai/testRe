企业邮箱
账号：qingcai.zeng@ectrip.com
密码：zengqc1.。6

oa
账号：http://oa.ectrip.com:9061/general/login/index.php 
密码：

git
账号：qingcai.zeng@ectrip.com
密码：zengqc7问好

数据库
账号：tomcatdb/tomcatdb
密码：220.231.216.128:1521/orcl

武隆源码SVN:
票务管理系统：    http://58.17.149.205:8880/svn/V57.Ticket/trunk
团队申报管理系统：http://58.17.149.205:8880/svn/V57.Booking/trunk
svn账号：km003  密码：wlkst123456


票务系统测试：http://10.2.67.210/system/index.jsp     /var/www/apps/v57/web/   /opt/tomcat.a/logs/catalina.out
团队系统测试：http://w.kst.com/system/index.jsp 后台

测试数据库：10.2.67.211  团队kst/kst 票务kstwl/kstwl
开发测试团队服务器        ticket-web-test       10.2.254.242       root/Ectrip@wl2015
开发测试票务服务器        ticket-web-test       10.2.67.210        root/redhat
开发测试数据库服务器      ticket-db-test        10.2.67.211        root/redhat    oracle/kst2016 使用同一密码管理所有账户： kst2016

电信vpn    222.180.11.99       test/admin1234
联通vpn    123.146.168.14    jimmy/redhat


10.2.254.242 w.kst.com    旅行社申报预定
10.2.254.242 sso.kst.com  单点登陆
10.2.254.242 pay.kst.com  结算中心

单点登陆账号：wltest001 密码：12345678

 
产品后台：http://tomcatoto.ectrip.com/system/main.jsp  admin 12345678


授权码管理	/provider/searchAuthCode.action

武隆测试库：
还有几张表没有：
	SubStock
	Reserveorderinfo
	CYTCONSUMEDATA

	

表外键：
	destination_product里面的combination_product_id指的是product里的id
	hot_search 里的product_id 是指定那个id？
	hot_word 里的res_id是m_show_viewpoint_components的id
	m_bootstrap_basic 里的res_id 是product里的id  
    m_bootstrap_basic  二维码页面基础信息表
	m_reservation_basic里的res_id 是product 里的id
	order_consume_data 里的resource_id对应product 的  id 
	order_notice里的order_code为order_info 对应里面的citypass_order_code
	order_sub_compensate、
	order_status_checker**  没有用到里的ticket_id是哪个？
	order_info 里面的order_code几乎没有用的
	company_poi里面的poi_id指的是poi的id
	order_compensate 里面的poi_id？
	
	
        建表的时候把注释写的清清楚楚的
        如果字段有枚举也要写出来，（比如说useType 1 代表什么 2代表什么 。。。。）
        省得去代码找
		还有外键关联也要写清楚
		
        
        在代码里面枚举紧紧挨着实体类这样容易找
		
        


预定订单成功
发送短信给用户
http://202.96.155.124:9901/z/v/S2WO7GDC4TI5.do   
http://test.citygopass.cn:9909/code/S2WO7GDC4TI5    
http://test.citygopass.cn:9909/m2/getOrderCode.do得到页面



http://test.citygopass.cn:9909/m2/saveVisitDateV2.do


一次预定订单（产生一个订单order)  对应一个旅游产品（product）   取票人 取票人手机号 产品单价 产品总价 产品门票数  计量货币


预付订单 预约景点  出游 


http://202.96.155.124:9900/security/login.do  分销系统 9900
http://202.96.155.124:9901/security/login.do  票务系统 9901  dingyou  Test1234
http://202.96.155.124:9901/m2/token/6.do 刷新日期

遇到问题能解决问题
合并代码
分配工作
管理人员 工作进度 
反馈问题
问题的请教



订单号码：20191106999000002


D:\ectrip\project\ticket\V57.Ticket\WebRoot\WEB-INF\classes

保存预约：saveVisitDateV2


1、order_create_push 预约表里面的发送状态字段有什么意义  provider_order_id字段

2、 order_sub_product 里面的`push_type` tinyint(2) DEFAULT '0' COMMENT '推送状态, 默认0无意义, 1 下单推送，2 消费推送，3 预约推送',

订单号：20191108999000002 

order_sub_product：

CREATE TABLE `order_sub_product` (

  `verify_start_time` varchar(10) NOT NULL COMMENT '核销开始时间00:00:00',
  `verify_end_time` varchar(10) NOT NULL COMMENT '核销结束时间23:56:59',
  `verify_max_time` tinyint(4) NOT NULL COMMENT '最大核销次数',
  `start_date` datetime DEFAULT NULL COMMENT '开始日期',
  `end_date` datetime DEFAULT NULL COMMENT '结束日期',
  `visit_date_string` varchar(50) DEFAULT NULL,
  `verify_valid_date_times` int(11) DEFAULT '0',

 



 状态 类型等整理
CREATE TABLE `hot_word` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `hot_search_id` int(11) NOT NULL COMMENT '热搜id',
  `name` varchar(50) NOT NULL COMMENT '名称',
  `res_id` int(11) NOT NULL COMMENT '关联景点id',???
  `res_name` varchar(60) DEFAULT NULL COMMENT '关联景点名称',
  `update_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=74 DEFAULT CHARSET=utf8



m_product与product的区别
m_product_price与product_price的区别




 ORDER_UNUSED(0, "未使用"),

    ORDER_BESPEAK_SUCCESSFUL(2, "已预约"),

    ORDER_CONSUMED(3, "已使用"),

    ORDER_REFUNDED(6, "已退订"),

    ORDER_CANCELED(7, "已取消"),

    ORDER_OVERTIME(8, "已过期"),

    ORDER_BESPEAK_REFUND(9, "预约后退订");
	

VALID  可使用的   未激活
REDEEMED 已使用的  使用完成
PARTIALLY_REDEEMED 已部分使用的（package）  使用中
EXPIRED 已过期的  已退订
REVOKED 已作废的  已退订
REDEMPTION_NOT_STARTED 使用期限尚未开始的  未激活
？消费中、已消费，都要做核销处理 这两个是属于消费中、已消费
RESERVED 已预定场次的   使用中
MANUALLY_REDEEMED 客服人工使用的     使用完成


TicketStatusType状态：
ORDER_UNUSED(0, "未激活"),

ORDER_UNUSED_OVER_TIME(1, "已失效"),

//ORDER_BESPEAK_SUCCESSFUL(2, "已预约"),

ORDER_CONSUMED(3, "使用完成"),

ORDER_USING(4, "使用中"),

ORDER_COMPLETED(5, "使用过期"),

ORDER_REFUNDED(6, "已退订");









新加坡pass测试:
https://uat-api.globaltix.com
reseller@globaltix.com
12345
产品：195
测试身份证号：
110101201003071233
110101201003073239
110101201003072279
110101201003078515
110101201003073992

https://www.jd.com


业务逻辑：
注册 登陆 短信验证码  
拉新活动 卡券 秒杀活动 
第三方接口调用
极光推送
上传图片到linux服务器


linux用途：图片服务器，数据库 redis rocketmq rabbitmq 后端服务 nginx网关 




防止重复点击
防止机器人刷单
短信验证码的重复刷


需求分析

boolean volidateSole(String[] intKeys, Long[] intValues, String[] keys, String[] values, String tableName) {
	String hql = "from " + tableName + " where 1=1";
	int i;
	if (keys != null && keys.length > 0) {
		for(i = 0; i < keys.length; ++i) {
			hql = hql + " and " + keys[i] + "='" + values[i] + "'";
		}
	}

	if (intKeys != null && intKeys.length > 0) {
		for(i = 0; i < intKeys.length; ++i) {
			hql = hql + " and " + intKeys[i] + "=" + intValues[i];
		}
	}

	List list = this.find(hql);
	return list == null || list.size() <= 0;
}


分析和解决一个 恶意获取手机验证码的事例：

阿坝旅游反馈12月7日有一批 1473550  和 1473551 手机网段的号码恶意获取验证码 达400条，又不进行真正的用户注册。

通过 数据和 系统日志分析：
1473550  和 1473551 手机网段的 7日那天 有 221个号码 恶意获取验证码，基本每个号码 通过2个不同的IP 进行获取验证码，然后 
这221个号码 又是通过不同的IP 进行操作的（用程序和不同的代理IP 进行恶意获取），

系统防范 可以 做一下 如下限制：

1、不允许通过代理 IP 上网 获取 验证码；
java代码可以获取到各级代理的ip： 
String  proxy_ip = getRequest().getHeader("x-forwarded-for");
//Nginx 做http代理  时  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
String proxy_ipFromNginx = getRequest().getHeader("X-Real-IP");

如果不为空（多级代理获取到的值时逗号隔开： 客户端, 代理1, 代理2, ...）就是通过代理IP上网的用户

2、同一个手机号码段（前7位，一天获取验证码不能超过 50条 （最大数量可后台控制））；




	
	
	
	



	


















